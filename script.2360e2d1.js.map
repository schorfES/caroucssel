{"version":3,"sources":["../src/types.ts","../src/utils/cache.ts","../src/features/mask/scrollbar.ts","../src/features/mask/index.ts","../src/proxy.ts","../src/utils/debounce.ts","../src/carousel.ts","../src/utils/render.ts","../src/features/buttons/index.ts","../src/features/pagination/index.ts","script.ts"],"names":[],"mappings":"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","file":"script.2360e2d1.js","sourceRoot":"../web","sourcesContent":["/**\n * The representation of all visual items in a carousel. The is at least one\n * item that is always visible. In cases (e.g. display: none) where visibility\n * is uncalculatable this is `[0]`.\n *\n * Each index represents the index of the child elements ({@link Carousel.items | see items})\n * inside the dom. The index of these elements inside the dom may not be\n * equivalent to the visual indexes (e.g. css flexbox-ordering or css grids).\n */\nexport type Index = [number, ...number[]];\n\n\n/**\n * The representation of item indexes grouped into pages. These pages are the\n * available entry points for control features like buttons and pagination.\n *\n * The indexes inside each grouped page is based on the visual order of the\n * child elements ({@link Carousel.items | see items}).\n *\n * For example:\n * ```\n *   <div class=\"carousel\">\n *     <div class=\"item\" style=\"width: 100%; order: 3\">Item 1</div>\n *     <div class=\"item\" style=\"width: 50%; order: 2\">Item 2</div>\n *     <div class=\"item\" style=\"width: 50%; order: 1\">Item 3</div>\n *   </div>\n * ```\n *\n * The pages representation would look like: `[[2], [1, 0]]` (see ordering and width)\n */\nexport type Pages = [Index, ...Index[]];\n\n\n/**\n * The minimal represenation of the carousel control properties.\n * @internal\n */\ninterface ICore {\n\tget id(): string;\n\tget el(): Element;\n\tget mask(): Element | null;\n\tget index(): Index;\n\tset index(value: Index);\n\tget items(): HTMLElement[];\n\tget pages(): Pages;\n\tget pageIndex(): number;\n}\n\n\n/**\n * The carousel interface.\n */\nexport interface ICarousel extends ICore {\n\tbehavior: ScrollBehavior;\n\tdestroy(): void;\n\tupdate(): void;\n}\n\n\n/**\n * The feature proxy interface.\n */\nexport interface IProxy extends ICore {\n\tupdate(sender: IFeature): void;\n}\n\n\n/**\n * The feature interface.\n */\nexport interface IFeature {\n\n\t/**\n\t * Each feature needs to return a constant name that identifies the plugin.\n\t * Build in features are using the prefix `buildin:`.\n\t */\n\tget name(): string;\n\n\t/**\n\t * Initializes this feature. This function will be called by the carousel\n\t * instance and should not be called manually.\n\t * @param proxy the proxy instance between carousel and feature\n\t */\n\tinit(proxy: IProxy): void;\n\n\t/**\n\t * Destroys this feature. This function will be called by the carousel instance\n\t * and should not be called manually.\n\t */\n\tdestroy(): void;\n\n\t/**\n\t * This triggers the feature to update its inner state. This function will be\n\t * called by the carousel instance and should not be called manually. The\n\t * carousel passes a data object that includes the update reason. This can be\n\t * used to selectively/partially update sections of the feature.\n\t * @param data dataset that triggered the update\n\t * @param data.reason is the update reason (why this was triggered)\n\t */\n\tupdate(data :UpdateEvent): void;\n}\n\n\n/**\n * The event that is passed into each feature.\n */\nexport type UpdateEvent = {\n\n\t/**\n\t * The reason why this update was triggered.\n\t */\n\ttype: UpdateType;\n\n};\n\n\n/**\n * Possible types of an update.\n */\nexport enum UpdateType {\n\tSCROLL = 'scroll',\n\tRESIZE = 'resize',\n\tFORCED = 'forced',\n\tFEATURE = 'feature',\n}\n\n\n/**\n * The browsers scroll behavior.\n * See {@link https://developer.mozilla.org/en-US/docs/Web/API/Element/scrollTo | scrollTo on MDN}\n */\nexport enum ScrollBehavior {\n\tAUTO = 'auto',\n\tSMOOTH = 'smooth',\n}\n\n\n/**\n * A function that can be used as callback on scroll events.\n */\nexport type ScrollHook = <T>(event: {\n\tindex: Index;\n\ttype: 'scroll';\n\ttarget: T;\n\toriginalEvent: Event;\n}) => void;\n\n\n/**\n * A filter function to filter specific child elements ({@link Carousel.items | see items})\n * of the carousel.\n */\nexport type FilterItemFn =\n\t((item: HTMLElement) => boolean) |\n\t((item: HTMLElement, index: number) => boolean) |\n\t((item: HTMLElement, index: number, array: HTMLElement[]) => boolean);\n","// The key of a WeakMap must be an object. There is no other type that matches\n// or is valid for @typescript-eslint.\n// eslint-disable-next-line @typescript-eslint/ban-types\ntype Reference = object;\n\ntype Storage = {\n\t[key: string]: unknown;\n};\n\nconst __CACHE = new WeakMap<Reference, Storage>();\n\n/**\n * Returns the cache entry by a specific key of a given reference. If the cache\n * is not filled and the key doesn't exisit this will retrun undefined.\n * @typeParam T is the type of the cached value\n * @param ref the reference\n * @param key the storage key\n * @returns the cached value or undefined\n */\nexport function fromCache<T = unknown>(ref: Reference, key: string): T | undefined;\n\n/**\n * Returns the cache entry by a specific key of a given reference. If the cache\n * is not filled and the key doesn't exisit, the factory function is called to\n * generate a value. This value will be cached and returned.\n * @typeParam T is the type of the cached value\n * @param ref the reference\n * @param key the storage key\n * @param factory the factory function\n * @returns the cached value\n */\nexport function fromCache<T = unknown>(ref: Reference, key: string, factory: () => T): T;\n\nexport function fromCache<T = unknown>(ref: Reference, key: string, factory?: () => T): T | undefined {\n\tconst storage = __CACHE.get(ref) || {};\n\tif (key in storage) {\n\t\treturn storage[key] as T;\n\t}\n\n\tif (!factory) {\n\t\treturn undefined;\n\t}\n\n\tconst value = factory();\n\tstorage[key] = value;\n\t__CACHE.set(ref, storage);\n\treturn value;\n}\n\n/**\n * Explicitly writes a value into the cache.\n * @typeParam T is the type of the value to cache\n * @param ref the reference\n * @param key the storage key\n * @param value the value\n */\nexport function writeCache<T = unknown>(ref: Reference, key: string, value: T): void {\n\tconst storage = __CACHE.get(ref) || {};\n\tstorage[key] = value;\n\t__CACHE.set(ref, storage);\n}\n\n/**\n * Creates the cache entry by as specific key of a given reference.\n * @param ref the reference\n * @param key the storage key\n */\nexport function clearCache(ref: Reference, key: string): void {\n\tconst storage = __CACHE.get(ref);\n\tif (!storage) {\n\t\treturn;\n\t}\n\n\tstorage[key] = undefined;\n\tdelete(storage[key]);\n}\n\n/**\n * Clears the full cache by a given reference.\n * @param ref the reference.\n */\nexport function clearFullCache(ref: Reference): void {\n\t__CACHE.delete(ref);\n}\n\n/**\n * This exposes the cache instance for test environments. Otherwise it will be null.\n * @internal\n */\n/* This should not be part of the coverage report: test util */\n/* istanbul ignore next */\nexport const cacheInstance = (process.env.NODE_ENV === 'test') ? __CACHE : null;\n","import { clearCache, fromCache } from '../../utils/cache';\n\n/**\n * Dataset of scrollbar dimensions\n * @internal\n */\nexport type ScrollbarDimensions = {\n\n\t/**\n\t * Vertical size of a scrollbar.\n\t */\n\theight: number,\n};\n\n\nconst CACHE_KEY_DIMENSIONS = 'dims';\n\n\n/**\n * Helper class for scrollbar features.\n * @internal\n */\nexport class Scrollbar {\n\n\t/**\n\t * Creates an instance.\n\t * @internal\n\t */\n\tconstructor() {\n\t\twindow.addEventListener('resize', () => {\n\t\t\tclearCache(this, CACHE_KEY_DIMENSIONS);\n\t\t});\n\t}\n\n\t/**\n\t * Calculates the dimensions of a scrollbar in the current browser. The result\n\t * of the computation will be cached for this instance.\n\t *\n\t * Inspired by https://gist.github.com/kflorence/3086552\n\t *\n\t * @return the dimensions of the scrollar\n\t */\n\tget dimensions(): ScrollbarDimensions {\n\t\treturn fromCache<ScrollbarDimensions>(this, CACHE_KEY_DIMENSIONS, () => {\n\t\t\tconst inner = document.createElement('div');\n\t\t\tconst outer = document.createElement('div');\n\n\t\t\tdocument.body.appendChild(outer);\n\t\t\touter.style.position = 'absolute';\n\t\t\touter.style.top = '0px';\n\t\t\touter.style.left = '0px';\n\t\t\touter.style.visibility = 'hidden';\n\t\t\touter.appendChild(inner);\n\n\t\t\t// Disabled, not needed for current feature set.\n\t\t\t//\n\t\t\t// Calculate width:\n\t\t\t// inner.style.width = '100%';\n\t\t\t// inner.style.height = '200px';\n\t\t\t// outer.style.width = '200px';\n\t\t\t// outer.style.height = '150px';\n\t\t\t// outer.style.overflow = 'hidden';\n\t\t\t// w1 = inner.offsetWidth;\n\t\t\t// outer.style.overflow = 'scroll';\n\t\t\t// w2 = inner.offsetWidth;\n\t\t\t// w2 = (w1 === w2) ? outer.clientWidth : w2;\n\t\t\t// width = w1 - w2;\n\n\t\t\t// Calculate height:\n\t\t\tinner.style.width = '200px';\n\t\t\tinner.style.height = '100%';\n\t\t\touter.style.width = '150px';\n\t\t\touter.style.height = '200px';\n\t\t\touter.style.overflow = 'hidden';\n\n\t\t\tconst h1 = inner.offsetHeight;\n\t\t\touter.style.overflow = 'scroll';\n\t\t\tlet h2 = inner.offsetHeight;\n\t\t\th2 = (h1 === h2) ? outer.clientHeight : h2;\n\t\t\tconst height = h1 - h2;\n\n\t\t\tdocument.body.removeChild(outer);\n\n\t\t\treturn {\n\t\t\t\t// width,\n\t\t\t\theight,\n\t\t\t};\n\t\t});\n\t}\n\n}\n","import { IFeature, IProxy, UpdateEvent, UpdateType } from '../../types';\nimport { clearCache, clearFullCache, fromCache, writeCache } from '../../utils/cache';\n\nimport { Scrollbar } from './scrollbar';\n\n\nconst FEATURE_NAME = 'buildin:mask';\n\nconst CACHE_KEY_PROXY = 'prxy';\nconst CACHE_KEY_CONFIGURATION = 'conf';\nconst CACHE_KEY_MASK = 'mask';\nconst CACHE_KEY_HEIGHT = 'hght';\n\n\n/**\n * The options for the mask and scrollbar features.\n */\nexport type Options = {\n\n\t/**\n\t * Enables/disables the rendering of the mask to hide (enabled) or show\n\t * (disabled) the browsers scrollbars.\n\t * @defaultValue `true`\n\t */\n\tenabled?: boolean;\n\n\t/**\n\t * The class name of the mask element that will wrap the carousel element.\n\t * @defaultValue `'caroucssel-mask'`\n\t */\n\tclassName?: string;\n\n\t/**\n\t * The tag name of the mask element that will wrap the carousel element.\n\t * @defaultValue `'div'`\n\t */\n\ttagName?: string;\n\n};\n\n\n/**\n * The required configuration for mask and scrollbar features.\n * @internal\n */\ntype Configuration = Required<Options>;\n\n\n/**\n * Singleton of scrollbar util. Is shared across all instances of carousel to\n * reduce redundant calculations.\n * @internal\n */\nlet __scrollbar: Scrollbar;\n\n\nconst DEFAULTS: Configuration = {\n\tenabled: true,\n\tclassName: 'caroucssel-mask',\n\ttagName: 'div',\n};\n\n\n/**\n * The feature to enable/disabled mask and scrollbar support. This feature will\n * be added by default to each carousel. Use this feature to customize the\n * default behaviour.\n */\nexport class Mask implements IFeature {\n\n\t/**\n\t * Creates an instance of this feature.\n\t * @param options are the options to configure this instance\n\t */\n\tconstructor(options: Options = {}) {\n\t\twriteCache(this, CACHE_KEY_CONFIGURATION, { ...DEFAULTS, ...options });\n\t}\n\n\t/**\n\t * Returns the name of this feature.\n\t */\n\tpublic get name(): typeof FEATURE_NAME {\n\t\treturn FEATURE_NAME;\n\t}\n\n\t/**\n\t * Returns the rendered element that wraps the carousel. If not enabled, this\n\t * returns `null`.\n\t * @return the mask element, otherwise `null` if disabled.\n\t */\n\tpublic get el(): Element | null {\n\t\treturn fromCache<Element>(this, CACHE_KEY_MASK) ?? null;\n\t}\n\n\t/**\n\t * Initializes this feature. This function will be called by the carousel\n\t * instance and should not be called manually.\n\t * @internal\n\t * @param proxy the proxy instance between carousel and feature\n\t */\n\tpublic init(proxy: IProxy): void {\n\t\twriteCache(this, CACHE_KEY_PROXY, proxy);\n\n\t\t// Create a singleton instance of scrollbar for all carousel instances:\n\t\t__scrollbar = __scrollbar ?? new Scrollbar();\n\n\t\tthis._render();\n\t}\n\n\t/**\n\t * Destroys this feature. This function will be called by the carousel instance\n\t * and should not be called manually.\n\t * @internal\n\t */\n\tpublic destroy(): void {\n\t\tthis._remove();\n\t\tclearFullCache(this);\n\t}\n\n\t/**\n\t * This triggers the feature to update its inner state. This function will be\n\t * called by the carousel instance and should not be called manually. The\n\t * carousel passes a event object that includes the update reason. This can be\n\t * used to selectively/partially update sections of the feature.\n\t * @internal\n\t * @param event event that triggered the update\n\t * @param event.reason is the update reason (why this was triggered)\n\t */\n\tpublic update(event: UpdateEvent): void {\n\t\tswitch (event.type) {\n\t\t\tcase UpdateType.RESIZE:\n\t\t\tcase UpdateType.FORCED:\n\t\t\t\tclearCache(this, CACHE_KEY_HEIGHT);\n\t\t\t\tthis._render();\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tthis._render();\n\t\t\t\tbreak;\n\t\t}\n\t}\n\n\t/**\n\t * Renders the mask element, wraps the carousel element and crops the\n\t * height of the browsers scrollbar.\n\t * @internal\n\t */\n\tprivate _render(): void {\n\t\tconst { enabled, className, tagName } = fromCache<Configuration>(this, CACHE_KEY_CONFIGURATION) as Configuration;\n\t\tif (!enabled) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst proxy = fromCache<IProxy>(this, CACHE_KEY_PROXY) as IProxy;\n\t\tconst element = proxy.el as HTMLElement | SVGElement;\n\t\tlet { height } = __scrollbar.dimensions;\n\n\t\tif (element.scrollWidth <= element.clientWidth) {\n\t\t\t// If the contents are not scrollable because their width are less\n\t\t\t// than the container, there will be no visible scrollbar. In this\n\t\t\t// case, the scrollbar height is 0:\n\t\t\theight = 0;\n\t\t}\n\n\t\t// Use fromCache factory to render mask element only once:\n\t\tfromCache<Element>(this, CACHE_KEY_MASK, () => {\n\t\t\tconst mask = document.createElement(tagName);\n\t\t\tmask.className = className;\n\t\t\tmask.style.overflow = 'hidden';\n\t\t\tmask.style.height = '100%';\n\t\t\telement.parentNode?.insertBefore(mask, element);\n\t\t\tmask.appendChild(element);\n\t\t\treturn mask;\n\t\t});\n\n\t\tconst cachedHeight = fromCache<number>(this, CACHE_KEY_HEIGHT);\n\t\tif (height === cachedHeight) {\n\t\t\treturn;\n\t\t}\n\n\t\twriteCache(this, CACHE_KEY_HEIGHT, height);\n\n\t\telement.style.height = `calc(100% + ${height}px)`;\n\t\telement.style.marginBottom = `${height * -1}px`;\n\t}\n\n\t/**\n\t * Removes the mask element and unwraps the carousel element.\n\t * @internal\n\t */\n\tprivate _remove(): void {\n\t\tconst { el } = fromCache<IProxy>(this, CACHE_KEY_PROXY) as IProxy;\n\t\tconst mask = fromCache<HTMLDivElement>(this, CACHE_KEY_MASK);\n\n\t\tmask?.parentNode?.insertBefore(el, mask);\n\t\tmask?.parentNode?.removeChild(mask);\n\t\tel.removeAttribute('style');\n\t}\n\n}\n","import { ICarousel, IFeature, Index, IProxy, Pages, UpdateType } from \"./types\";\nimport { fromCache, writeCache } from './utils/cache';\n\n\nconst CACHE_KEY_INSTANCE = 'inst';\nconst CACHE_KEY_FEATURES = 'feat';\n\n\n/**\n * Helper to access the instance cache.\n * @internal\n */\nfunction __getInstance(ref: Proxy): ICarousel {\n\treturn fromCache<ICarousel>(ref, CACHE_KEY_INSTANCE) as ICarousel;\n}\n\n\n/**\n * Helper to access the features cache.\n * @internal\n */\nfunction __getFeatures(ref: Proxy): IFeature[] {\n\treturn fromCache<IFeature[]>(ref, CACHE_KEY_FEATURES) as IFeature[];\n}\n\n/**\n * A proxy instance between carousel and a feature. Restricts the access for\n * features to the carousel instance.\n */\nexport class Proxy implements IProxy {\n\n\t/**\n\t * Creates an instance of the proxy.\n\t * @param instance the carousel instance to proxy the access to.\n\t * @param features all the features that should access the carousel through this instance.\n\t */\n\tconstructor(instance: ICarousel, features: IFeature[]) {\n\t\twriteCache(this, CACHE_KEY_INSTANCE, instance);\n\t\twriteCache(this, CACHE_KEY_FEATURES, features);\n\t}\n\n\t/**\n\t * Proxies the {@link Carousel.id | `id`} getter of the carousel.\n\t */\n\tpublic get id(): string {\n\t\treturn __getInstance(this).id;\n\t}\n\n\t/**\n\t * Proxies the {@link Carousel.el | `el`} getter of the carousel.\n\t */\n\tpublic get el(): Element {\n\t\treturn __getInstance(this).el;\n\t}\n\n\t/**\n\t * Proxies the {@link Carousel.mask | `mask`} getter of the carousel.\n\t */\n\tpublic get mask(): Element | null {\n\t\treturn __getInstance(this).mask;\n\t}\n\n\t/**\n\t * Proxies the {@link Carousel.index | `index`} getter of the carousel.\n\t */\n\tpublic get index(): Index {\n\t\treturn __getInstance(this).index;\n\t}\n\n\t/**\n\t * Proxies the {@link Carousel.index | `index`} setter of the carousel.\n\t */\n\tpublic set index(value: Index) {\n\t\t__getInstance(this).index = value;\n\t}\n\n\t/**\n\t * Proxies the {@link Carousel.items | `items`} getter of the carousel.\n\t */\n\tpublic get items(): HTMLElement[] {\n\t\treturn __getInstance(this).items;\n\t}\n\n\t/**\n\t * Proxies the {@link Carousel.pages | `pages`} getter of the carousel.\n\t */\n\tpublic get pages(): Pages {\n\t\treturn __getInstance(this).pages;\n\t}\n\n\t/**\n\t * Proxies the {@link Carousel.pagesIndex | `pagesIndex`} getter of the carousel.\n\t */\n\tpublic get pageIndex(): number {\n\t\treturn __getInstance(this).pageIndex;\n\t}\n\n\t/**\n\t * Function to trigger an update from a feature. This will send an update to\n\t * the carousel instance and all other attached features exept the sender.\n\t * @param sender feature that triggers the update.\n\t */\n\tpublic update(sender: IFeature): void {\n\t\t__getInstance(this).update();\n\n\t\t// Trigger update in all other features except the source feature that\n\t\t// triggered the event:\n\t\t__getFeatures(this).forEach((feature): void => {\n\t\t\tif (feature === sender) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tfeature.update({ type: UpdateType.FEATURE });\n\t\t});\n\t}\n\n}\n","// See: https://codeburst.io/throttling-and-debouncing-in-javascript-b01cad5c8edf\n\n\n/**\n * Generic function\n */\nexport type Source = (...args: never[]) => unknown;\n\n\n/**\n * Debounced function\n * @typeParam F is the shape of the original function.\n */\nexport type Debounced<F extends Source> = (...args: Parameters<F>) => void;\n\n\n/**\n * Creates a debounced version for a given function in a given delay (in ms).\n * @typeParam F is the shape of the function to debounce.\n * @param func the original function\n * @param delay the delay in milliseconds (ms)\n * @returns the debounced function\n */\nexport function debounce<F extends Source>(func: F, delay: number): Debounced<F> {\n\tlet timeout: ReturnType<typeof setTimeout> | null = null;\n\tconst debounced = (...args: Parameters<F>) => {\n\t\tif (timeout !== null) {\n      clearTimeout(timeout);\n\t\t}\n\n\t\ttimeout = setTimeout(() => func(...args), delay);\n\t};\n\n\treturn debounced;\n}\n","import { Mask } from './features/mask';\nimport { Proxy } from './proxy';\nimport { FilterItemFn, ICarousel, IFeature, Index, Pages, ScrollBehavior, ScrollHook, UpdateType } from './types';\nimport { clearCache, clearFullCache, fromCache, writeCache } from './utils/cache';\nimport { debounce } from './utils/debounce';\n\n\nconst ID_NAME = (count: number) => `caroucssel-${count}`;\nconst ID_MATCH = /^caroucssel-[0-9]*$/;\n\nconst EVENT_SCROLL = 'scroll';\nconst EVENT_RESIZE = 'resize';\n\nconst CACHE_KEY_ELEMENT = 'element';\nconst CACHE_KEY_ID = 'id';\nconst CACHE_KEY_CONFIGURATION = 'config';\nconst CACHE_KEY_INDEX = 'index';\nconst CACHE_KEY_ITEMS = 'items';\nconst CACHE_KEY_PAGES = 'pages';\nconst CACHE_KEY_PAGE_INDEX = 'page-index';\nconst CACHE_KEY_MASK = 'mask';\nconst CACHE_KEY_PROXY = 'proxy';\nconst CACHE_KEY_FEATURES = 'feautres';\n\nconst VISIBILITY_OFFSET = 0.25;\nconst INVISIBLE_ELEMENTS = /^(link|meta|noscript|script|style|title)$/i;\n\n\n/**\n * Export the mask because it's used by default inside the carousel.\n */\nexport { Mask };\n\n\n/**\n * The available options for the carousel.\n */\nexport type Options = {\n\tindex?: Index | number;\n\tfeatures?: IFeature[],\n\tfilterItem?: FilterItemFn;\n\tonScroll?: ScrollHook;\n};\n\n\n/**\n * The required configuration of the carousel.\n * @internal\n */\nexport type Configuration = Omit<Required<Options>, 'index'>;\n\n\n/*\n * Internal counter for created instances. Will be used to create unique IDs.\n */\nlet __instanceCount = 0;\n\n\nconst DEFAULTS: Configuration = {\n\tfeatures: [],\n\tfilterItem: () => true,\n\tonScroll: () => undefined,\n};\n\n\n/**\n * The carousel instance.\n */\nexport class Carousel implements ICarousel {\n\n\t/**\n\t * This will be used for testing purposes to reset the instance count which is\n\t * used to create unique id's.\n\t * @internal\n\t */\n\tpublic static resetInstanceCount(): void {\n\t\t/* This should not be part of the coverage report: test util */\n\t\t/* istanbul ignore next */\n\t\tif (process.env.NODE_ENV === 'test') {\n\t\t\t__instanceCount = 0;\n\t\t}\n\t}\n\n\t/**\n\t * Current scroll behavior. Possible values are:\n\t * * `'auto'`\n\t * * `'smooth'`\n\t */\n\tpublic behavior: ScrollBehavior = ScrollBehavior.AUTO;\n\n\t/**\n\t * Creates an instance.\n\t * @param el is the dom element to control. This should be a container element\n\t * \tthat holds child elements that will scroll horizontally.\n\t * @param options are the options to configure this instance.\n\t */\n\tconstructor(el: Element, options: Options = {}) {\n\t\tif (!el || !(el instanceof Element)) {\n\t\t\tthrow new Error(`Carousel needs a dom element but \"${(typeof el)}\" was passed.`);\n\t\t}\n\n\t\twriteCache(this, CACHE_KEY_ELEMENT, el);\n\n\t\t// Count all created instances to create unique id, if given dom element\n\t\t// has no id-attribute:\n\t\t__instanceCount++;\n\t\tel.id = el.id || ID_NAME(__instanceCount);\n\t\twriteCache(this, CACHE_KEY_ID, el.id);\n\n\t\t// Extend options and defaults into configuration:\n\t\tconst configuration = { ...DEFAULTS, ...options };\n\t\twriteCache(this, CACHE_KEY_CONFIGURATION, configuration);\n\n\t\t// Detect if there is a \"Mask\" feature passed as option. Then use this one,\n\t\t// otherwise add a mandatory instance by default. Also ensure that only one\n\t\t// feature of type \"Mask\" is in the features list.\n\t\tlet mask: IFeature | null = null;\n\t\tlet features = [...configuration.features];\n\t\tconst index = configuration.features.findIndex((feature): boolean => feature instanceof Mask);\n\t\tif (index > -1) {\n\t\t\t// Extract first found instance of \"Mask\":\n\t\t\t[mask] = features.splice(index, 1);\n\t\t}\n\t\tmask ??= new Mask();\n\t\tfeatures = features.filter((feature): boolean => !(feature instanceof Mask));\n\t\tfeatures = [mask, ...features];\n\t\twriteCache(this, CACHE_KEY_MASK, mask);\n\n\t\t// Features: Initialize all features with a single proxy instance inbetween.\n\t\tconst proxy = new Proxy(this, features);\n\t\twriteCache(this, CACHE_KEY_PROXY, proxy);\n\t\twriteCache(this, CACHE_KEY_FEATURES, features);\n\t\tfeatures.forEach((feature) => feature.init(proxy));\n\n\t\t// Set initial index and finally set smooth scrolling to enabled:\n\t\tswitch (true) {\n\t\t\t// When index is a list:\n\t\t\tcase Array.isArray(options.index):\n\t\t\t\tthis.index = options.index as Index;\n\t\t\t\tbreak;\n\t\t\t// When index is a number, transfrom to list:\n\t\t\tcase !isNaN(options.index as number):\n\t\t\t\tthis.index = [options.index as number];\n\t\t\t\tbreak;\n\t\t}\n\t\tthis.behavior = ScrollBehavior.SMOOTH;\n\n\t\t// Events:\n\t\t//\n\t\t// We disable @typescript-eslint/unbound-method here because we already bound\n\t\t// the functions while creating a debounced version. This would also cause\n\t\t// reference errors when tying to access these function references when used\n\t\t// with removeEventListeners() (see: destroy())\n\t\t//\n\t\t/* eslint-disable @typescript-eslint/unbound-method */\n\t\tthis._onScroll = debounce(this._onScroll.bind(this), 25);\n\t\tthis._onResize = debounce(this._onResize.bind(this), 25);\n\t\tel.addEventListener(EVENT_SCROLL, this._onScroll);\n\t\twindow.addEventListener(EVENT_RESIZE, this._onResize);\n\t\t/* eslint-enable @typescript-eslint/unbound-method */\n\t}\n\n\t/**\n\t * Returns the dom element reference of the carousel which was passed into the\n\t * constructor.\n\t * @public\n\t * @return the controlled dom element\n\t */\n\tpublic get el(): Element {\n\t\treturn fromCache<Element>(this, CACHE_KEY_ELEMENT) as Element;\n\t}\n\n\t/**\n\t * Returns the dom element reference of the mask element that wraps the\n\t * carousel element.\n\t * @public\n\t * @return the mask dom element\n\t */\n\tpublic get mask(): Element | null {\n\t\tconst mask = fromCache<Mask>(this, CACHE_KEY_MASK) as Mask;\n\t\treturn mask.el ?? null;\n\t}\n\n\t/**\n\t * Returns the id-attribute value of the carousel.\n\t * @public\n\t * @return the id of the controlled dom element\n\t */\n\tpublic get id(): string {\n\t\treturn fromCache<string>(this, CACHE_KEY_ID) as string;\n\t}\n\n\t/**\n\t * Returns the current index of the carousel. The returned index is a list (array)\n\t * of indexes that are currently visible (depending on each item width).\n\t * @public\n\t * @return a list of visible indexes\n\t */\n\tpublic get index(): Index {\n\t\treturn fromCache(this, CACHE_KEY_INDEX, (): Index => {\n\t\t\tconst { el, items } = this;\n\t\t\tconst { length } = items;\n\t\t\tconst { clientWidth } = el;\n\t\t\tconst outerLeft = el.getBoundingClientRect().left;\n\n\t\t\tconst index: number[] = [];\n\t\t\tlet at = 0;\n\n\t\t\tfor (;at < length; at++) {\n\t\t\t\tconst item = items[at];\n\t\t\t\tconst rect = item.getBoundingClientRect();\n\t\t\t\tconst { width } = rect;\n\t\t\t\tlet { left } = rect;\n\t\t\t\tleft = left - outerLeft;\n\n\t\t\t\tif (left + width * VISIBILITY_OFFSET >= 0 &&\n\t\t\t\t\tleft + width * (1 - VISIBILITY_OFFSET) <= clientWidth) {\n\t\t\t\t\tindex.push(at);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (index.length === 0) {\n\t\t\t\t// If no index found, we return a [0] as default. This possibly happens\n\t\t\t\t// when the carousel is not attached to the DOM or is visually hidden (display: none).\n\t\t\t\treturn [0];\n\t\t\t}\n\n\t\t\treturn index as Index;\n\t\t});\n\t}\n\n\t/**\n\t * Sets the current index of the carousel. To set an index you need to pass an\n\t * array with at least one element. When passing more than one, the rest will\n\t * be ignored.\n\t * @public\n\t * @param values are the upcoming indexes\n\t */\n\tpublic set index(values: Index) {\n\t\tconst { behavior, el, items } = this;\n\t\tconst { length } = items;\n\n\t\tif (!Array.isArray(values) || !values.length) {\n\t\t\treturn;\n\t\t}\n\n\t\tlet value = values[0] || 0;\n\t\tvalue = Math.max(Math.min(value, length - 1), 0);\n\n\t\tconst { scrollLeft } = el;\n\t\tconst from = { left: scrollLeft };\n\t\tconst to = { left: items[value].offsetLeft };\n\n\t\t// If the target item is the first visible element in the list, ignore\n\t\t// the possible offset to the left and scroll to the beginning of the list:\n\t\tif (value === this.pages[0][0]) {\n\t\t\tto.left = 0;\n\t\t}\n\n\t\tif (from.left === to.left) {\n\t\t\treturn;\n\t\t}\n\n\t\tclearCache(this, CACHE_KEY_INDEX);\n\n\t\tel.scrollTo({ ...to, behavior });\n\t}\n\n\t/**\n\t * Returns an array of all child dom elements of the carousel.\n\t * @public\n\t * @return a list of elements (child elements of the root element)\n\t */\n\tpublic get items(): HTMLElement[] {\n\t\treturn fromCache(this, CACHE_KEY_ITEMS, (): HTMLElement[] => {\n\t\t\tconst { filterItem } = fromCache<Configuration>(this, CACHE_KEY_CONFIGURATION) as Configuration;\n\t\t\tconst { el } = this;\n\t\t\tconst children = Array.from(el.children) as HTMLElement[];\n\n\t\t\treturn children\n\t\t\t\t.filter((item) => !INVISIBLE_ELEMENTS.test(item.tagName) && !item.hidden)\n\t\t\t\t.filter(filterItem);\n\t\t});\n\t}\n\n\t/**\n\t * Returns an array of all pages. Each page is a group of indexes that matches\n\t * a page.\n\t * @public\n\t * @return the list of pages and indexes inside each page\n\t */\n\tpublic get pages(): Pages {\n\t\treturn fromCache(this, CACHE_KEY_PAGES, (): Pages => {\n\t\t\tconst { el, items } = this;\n\t\t\tconst { clientWidth: viewport } = el;\n\n\t\t\tif (viewport === 0) {\n\t\t\t\t// if the width of the carousel element is zero, we can not calculate\n\t\t\t\t// the pages properly and the carousel seems to be not visible. If\n\t\t\t\t// this is the case, we assume that each item is placed on a\n\t\t\t\t// separate page.\n\t\t\t\treturn items.map((item, index) => [index] as Index) as Pages;\n\t\t\t}\n\n\t\t\ttype Dataset = {\n\t\t\t\titem: HTMLElement;\n\t\t\t\tleft: number;\n\t\t\t\twidth: number;\n\t\t\t\tindex: number;\n\t\t\t};\n\n\t\t\tlet pages: Dataset[][] = [[]];\n\n\t\t\titems\n\t\t\t\t.map((item, index): Dataset => {\n\t\t\t\t\t// Create a re-usable dataset for each item:\n\t\t\t\t\tconst { offsetLeft: left, clientWidth: width } = item;\n\t\t\t\t\treturn { left, width, item, index };\n\t\t\t\t})\n\t\t\t\t.sort((a, b) => {\n\t\t\t\t\t// Create ordered list of items based on their visual ordering.\n\t\t\t\t\t// This may differ from the DOM ordering unsing css properties\n\t\t\t\t\t// like `order` in  flexbox or grid:\n\t\t\t\t\treturn a.left - b.left;\n\t\t\t\t})\n\t\t\t\t.forEach((item) => {\n\t\t\t\t\t// Calculate pages / page indexes for each item:\n\t\t\t\t\t//\n\t\t\t\t\t// The idea behind the calculation of the pages is to separate\n\t\t\t\t\t// the items by fitting them into the viewport of the carousel.\n\t\t\t\t\t// To behave correctly, we cannot divide the total length of the\n\t\t\t\t\t// carousel by the viewport to get the page indexes (naive approach).\n\t\t\t\t\t// However, since there may be items that are partially visible\n\t\t\t\t\t// on a page, but mathematically create a new page. The calculation\n\t\t\t\t\t// must start from this item again. This means that always the\n\t\t\t\t\t// first item on a page sets the basis for the calculation of\n\t\t\t\t\t// the following item and its belonging to the current or next\n\t\t\t\t\t// page:\n\t\t\t\t\tconst { left, width } = item;\n\n\t\t\t\t\tconst prevPage = pages[pages.length - 1];\n\t\t\t\t\tconst firstItem = prevPage[0];\n\t\t\t\t\tlet start = firstItem?.left || 0;\n\n\t\t\t\t\t// This is required for the first page. The first page always\n\t\t\t\t\t// needs to start from the left=0. Any offset from the\n\t\t\t\t\t// left of the first visual item needs to be ignored, otherwise\n\t\t\t\t\t// the calculation of visual pages is incorrect:\n\t\t\t\t\tif (prevPage === pages[0]) {\n\t\t\t\t\t\tstart = 0;\n\t\t\t\t\t}\n\n\t\t\t\t\t// At least 75% of the items needs to be in the page. Calculate\n\t\t\t\t\t// the amount of new pages to add. If value is 0, the current\n\t\t\t\t\t// item fits into the previous page:\n\t\t\t\t\tlet add = Math.floor(((left - start) + width * (1 - VISIBILITY_OFFSET)) / viewport);\n\n\t\t\t\t\twhile(add > 0) {\n\t\t\t\t\t\tpages.push([]);\n\t\t\t\t\t\tadd--;\n\t\t\t\t\t}\n\n\t\t\t\t\tconst page = pages[pages.length - 1];\n\t\t\t\t\tpage.push(item);\n\t\t\t\t});\n\n\t\t\t// Remove empty pages: this might happen if items are wider than the\n\t\t\t// carousel viewport:\n\t\t\tpages = pages.filter((page) => page.length !== 0);\n\n\t\t\t// Restructure pages to only contain the index of each item:\n\t\t\treturn pages.map((page) => page.map(({ index }) => index) as Index) as Pages;\n\t\t});\n\t}\n\n\t/**\n\t * Returns the index of the current page.\n\t * @public\n\t * @return the index of the current page\n\t */\n\tpublic get pageIndex(): number {\n\t\treturn fromCache(this, CACHE_KEY_PAGE_INDEX, (): number => {\n\t\t\tconst { el, items, index, pages } = this;\n\t\t\tconst outerLeft = el.getBoundingClientRect().left;\n\t\t\tconst { clientWidth } = el;\n\n\t\t\tlet visibles: number[] = index.reduce<number []>((acc, at) => {\n\t\t\t\tif (!items[at]) {\n\t\t\t\t\treturn acc;\n\t\t\t\t}\n\n\t\t\t\tlet { left, right } = items[at].getBoundingClientRect();\n\t\t\t\t// \"getBoundingClientRect()\" can return float numbers which\n\t\t\t\t// lead to an unwanted behavior when in the calculation with\n\t\t\t\t// \"clientWidth\" (not using floats). We use round here to\n\t\t\t\t// normalize those values...\n\t\t\t\tleft = Math.round(left - outerLeft);\n\t\t\t\tright = Math.round(right - outerLeft);\n\n\t\t\t\t// Remove items that partially hidden to the left or right:\n\t\t\t\tif (left < 0 || clientWidth < right) {\n\t\t\t\t\treturn acc;\n\t\t\t\t}\n\n\t\t\t\treturn acc.concat([at]);\n\t\t\t}, []);\n\n\t\t\t// There might be no possible candidates. This is the case when items\n\t\t\t// are wider than the element viewport. In this case we take the first\n\t\t\t// item which is currently visible in general (might be the only one):\n\t\t\tif (visibles.length === 0) {\n\t\t\t\tvisibles = [index[0]];\n\t\t\t}\n\n\t\t\t// Search for the visible item that is most aligned to the right. The\n\t\t\t// found item marks the current page...\n\t\t\tconst at = visibles.sort((a, b) => {\n\t\t\t\tconst rightA = items[a].getBoundingClientRect().right;\n\t\t\t\tconst rightB = items[b].getBoundingClientRect().right;\n\t\t\t\treturn rightB - rightA;\n\t\t\t})[0];\n\n\t\t\t// Find the page index where the current item index is located...\n\t\t\treturn pages.findIndex((page) => page.includes(at));\n\t\t});\n\t}\n\n\t/**\n\t * This completely deconstructs the carousel and returns the dom to its\n\t * initial state.\n\t * @public\n\t */\n\tpublic destroy(): void {\n\t\tconst { el } = this;\n\n\t\t// Remove created id if it was created by carousel:\n\t\tID_MATCH.test(el.id) && el.removeAttribute('id');\n\n\t\t// Destroy attached features:\n\t\tconst features = fromCache<IFeature[]>(this, CACHE_KEY_FEATURES) as IFeature[];\n\t\tfeatures.forEach((feature) => feature.destroy());\n\n\t\t// Remove events:\n\t\t//\n\t\t// We need to work the the function reference. Using .bind() would create a\n\t\t// new referenced instance of the callback function. We already created a\n\t\t// bound version of these function within the constructor.\n\t\t//\n\t\t/* eslint-disable @typescript-eslint/unbound-method */\n\t\tel.removeEventListener(EVENT_SCROLL, this._onScroll);\n\t\twindow.removeEventListener(EVENT_RESIZE, this._onResize);\n\t\t/* eslint-enable @typescript-eslint/unbound-method */\n\n\t\t// Clear cache:\n\t\tclearFullCache(this);\n\t}\n\n\t/**\n\t * Enforces an update of all enabled components of the carousel. This is, for\n\t * example, useful when changing the number of items inside the carousel. This\n\t * also forwards an update call to all attached features.\n\t * @public\n\t */\n\tpublic update(): void {\n\t\tclearCache(this, CACHE_KEY_INDEX);\n\t\tclearCache(this, CACHE_KEY_ITEMS);\n\t\tclearCache(this, CACHE_KEY_PAGES);\n\t\tclearCache(this, CACHE_KEY_PAGE_INDEX);\n\n\t\tconst features = fromCache<IFeature[]>(this, CACHE_KEY_FEATURES) as IFeature[];\n\t\tfeatures.forEach((feature) => feature.update({ type: UpdateType.FORCED }));\n\t}\n\n\tprotected _onScroll(event: Event): void {\n\t\tclearCache(this, CACHE_KEY_INDEX);\n\t\tclearCache(this, CACHE_KEY_PAGE_INDEX);\n\n\t\tconst features = fromCache<IFeature[]>(this, CACHE_KEY_FEATURES) as IFeature[];\n\t\tfeatures.forEach((feature) => feature.update({ type: UpdateType.SCROLL }));\n\n\t\tconst { index } = this;\n\t\tconst configuration = fromCache<Configuration>(this, CACHE_KEY_CONFIGURATION) as Configuration;\n\t\tconfiguration.onScroll<Carousel>({ index, type: EVENT_SCROLL, target: this, originalEvent: event });\n\t}\n\n\tprotected _onResize(): void {\n\t\tclearCache(this, CACHE_KEY_PAGES);\n\t\tclearCache(this, CACHE_KEY_INDEX);\n\t\tclearCache(this, CACHE_KEY_PAGE_INDEX);\n\n\t\tconst features = fromCache<IFeature[]>(this, CACHE_KEY_FEATURES) as IFeature[];\n\t\tfeatures.forEach((feature) => feature.update({ type: UpdateType.RESIZE }));\n\t}\n\n}\n","/**\n * Renders a template (function) to into an HTML element. The template needs to\n * return a valid HTML string (with a single root element). A context with\n * key/value pairs will be passed into the template to allow dynamic rendering.\n * @typeParam El is the type of the rendered dom element.\n * @typeParam Context is the shape of the context data object\n * @param template a function to render a template\n * @param context context data for the template\n * @returns the rendered htmml element\n */\nexport function render<El = HTMLElement, Context = Record<string, unknown>>(\n\ttemplate: (context: Context) => string,\n\tcontext: Context,\n): El | null {\n\tconst el = document.createElement('div');\n\tel.innerHTML = template(context);\n\n\tconst ref = el.firstElementChild;\n\tif (!ref) {\n\t\treturn null;\n\t}\n\n\treturn ref as unknown as El;\n}\n","import { IFeature, IProxy } from '../../types';\nimport { clearFullCache, fromCache, writeCache } from '../../utils/cache';\nimport { render } from '../../utils/render';\n\n\nconst FEATURE_NAME = 'buildin:buttons';\n\nconst CACHE_KEY_PROXY = 'prxy';\nconst CACHE_KEY_CONFIGURATION = 'conf';\nconst CACHE_KEY_BUTTONS = 'btns';\n\nconst EVENT_CLICK = 'click';\n\n\n/**\n * The template function to render a HTML markup of a button.\n * @param context the template context containing the required data to render\n * @return the HTML markup\n */\nexport type Template = (context: Context) => string;\n\n\n/**\n * The template rendering context.\n */\nexport type Context = {\n\tcontrols: string;\n\tclassName: string;\n\tlabel: string;\n\ttitle: string;\n};\n\n\n/**\n * Short type of HTMLButtonElement or nullish (not rendered).\n * @interal\n */\ntype Button = HTMLButtonElement | null;\n\n\n/**\n * The options for the buttons feature.\n */\nexport type Options = {\n\t/**\n\t * Render function for a single button.\n\t */\n\ttemplate?: Template;\n\n\t/**\n\t * The shared class name for both buttons (next and previous).\n\t * @defaultValue `'button'`\n\t */\n\tclassName?: string;\n\n\t/**\n\t * The class name of the next button.\n\t * @defaultValue `'is-next'`\n\t */\n\tnextClassName?: string;\n\n\t/**\n\t * The text label of the next button.\n\t * @defaultValue `'Next'`\n\t */\n\tnextLabel?: string;\n\n\t/**\n\t * The title attribute value of the next button.\n\t * @defaultValue `'Go to next'`\n\t */\n\tnextTitle?: string;\n\n\t/**\n\t * The class name of the previous button.\n\t * @defaultValue `'is-previous'`\n\t */\n\tpreviousClassName?: string;\n\n\t/**\n\t * The text label of the previous button.\n\t * @defaultValue `'Previous'`\n\t */\n\tpreviousLabel?: string;\n\n\t/**\n\t * The title attribute value of the previous button.\n\t * @defaultValue `'Go to previous'`\n\t */\n\tpreviousTitle?: string;\n\n};\n\n\n/**\n * The required configuration for buttons feature.\n * @internal\n */\ntype Configuration = Required<Options>;\n\n\nconst DEFAULTS: Configuration = {\n\ttemplate: ({ className, controls, label, title }: Context) => `\n\t\t<button type=\"button\" class=\"${className}\" aria-label=\"${label}\" title=\"${title}\" aria-controls=\"${controls}\">\n\t\t\t<span>${label}</span>\n\t\t</button>\n\t`,\n\tclassName: 'button',\n\n\tnextClassName: 'is-next',\n\tnextLabel: 'Next',\n\tnextTitle: 'Go to next',\n\n\tpreviousClassName: 'is-previous',\n\tpreviousLabel: 'Previous',\n\tpreviousTitle: 'Go to previous',\n};\n\n\n/**\n * The feature to enable button controls (next and previous) for a carousel.\n */\nexport class Buttons implements IFeature {\n\n\t/**\n\t * Creates an instance of this feature.\n\t * @param options are the options to configure this instance\n\t */\n\tconstructor(options: Options = {}) {\n\t\twriteCache(this, CACHE_KEY_CONFIGURATION, { ...DEFAULTS, ...options });\n\t\tthis._onPrev = this._onPrev.bind(this);\n\t\tthis._onNext = this._onNext.bind(this);\n\t}\n\n\t/**\n\t * Returns the name of this feature.\n\t */\n\tpublic get name(): typeof FEATURE_NAME {\n\t\treturn FEATURE_NAME;\n\t}\n\n\t/**\n\t * Initializes this feature. This function will be called by the carousel\n\t * instance and should not be called manually.\n\t * @internal\n\t * @param proxy the proxy instance between carousel and feature\n\t */\n\tpublic init(proxy: IProxy): void {\n\t\twriteCache(this, CACHE_KEY_PROXY, proxy);\n\t\tthis._render();\n\t}\n\n\t/**\n\t * Destroys this feature. This function will be called by the carousel instance\n\t * and should not be called manually.\n\t * @internal\n\t */\n\tpublic destroy(): void {\n\t\tthis._remove();\n\t\tclearFullCache(this);\n\t}\n\n\t/**\n\t * This triggers the feature to update its inner state. This function will be\n\t * called by the carousel instance and should not be called manually. The\n\t * carousel passes a event object that includes the update reason. This can be\n\t * used to selectively/partially update sections of the feature.\n\t * @internal\n\t */\n\tpublic update(/* event :UpdateEvent */): void {\n\t\tthis._render();\n\t}\n\n\t/**\n\t * Renders and update the button elements. Buttons will only be rendered once\n\t * and then loaded from cache. When calling this function twice or more, the\n\t * button states will be updated based on the scroll position.\n\t * @internal\n\t */\n\tprivate _render(): void {\n\t\tconst proxy = fromCache<IProxy>(this, CACHE_KEY_PROXY) as IProxy;\n\t\tconst config = fromCache<Configuration>(this, CACHE_KEY_CONFIGURATION) as Configuration;\n\n\t\tconst { el, mask, pages, pageIndex } = proxy;\n\n\t\t// Render buttons only once. Load them from cache if already rendered and\n\t\t// attached to the dom:\n\t\tconst [next, previous] = fromCache<Button[]>(\n\t\t\tthis, CACHE_KEY_BUTTONS, () => {\n\t\t\t\tconst target = mask ?? el;\n\t\t\t\tconst {\n\t\t\t\t\ttemplate, className,\n\t\t\t\t\tpreviousClassName, previousLabel, previousTitle,\n\t\t\t\t\tnextClassName, nextLabel, nextTitle,\n\t\t\t\t} = config;\n\n\t\t\t\t// Create button elements:\n\t\t\t\tconst settings = [\n\t\t\t\t\t{\n\t\t\t\t\t\tcontrols: el.id,\n\t\t\t\t\t\tlabel: nextLabel,\n\t\t\t\t\t\ttitle: nextTitle,\n\t\t\t\t\t\tclassName: [className, nextClassName].join(' '),\n\t\t\t\t\t\t// The onClick listener is already bound in the constructor.\n\t\t\t\t\t\t//\n\t\t\t\t\t\t// eslint-disable-next-line @typescript-eslint/unbound-method\n\t\t\t\t\t\thandler: this._onNext,\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tcontrols: el.id,\n\t\t\t\t\t\tlabel: previousLabel,\n\t\t\t\t\t\ttitle: previousTitle,\n\t\t\t\t\t\tclassName: [className, previousClassName].join(' '),\n\t\t\t\t\t\t// The onClick listener is already bound in the constructor.\n\t\t\t\t\t\t//\n\t\t\t\t\t\t// eslint-disable-next-line @typescript-eslint/unbound-method\n\t\t\t\t\t\thandler: this._onPrev,\n\t\t\t\t\t},\n\t\t\t\t];\n\n\t\t\t\treturn settings.map(({ handler, ...params }) => {\n\t\t\t\t\tconst button = render<HTMLButtonElement, Context>(template, params);\n\t\t\t\t\tif (!button) {\n\t\t\t\t\t\treturn null;\n\t\t\t\t\t}\n\n\t\t\t\t\tbutton.addEventListener(EVENT_CLICK, handler);\n\t\t\t\t\ttarget.parentNode?.insertBefore(button, target.nextSibling);\n\t\t\t\t\treturn button;\n\t\t\t\t});\n\t\t\t},\n\t\t);\n\n\t\tif (next) {\n\t\t\tconst lastPage = pages[pageIndex + 1];\n\t\t\tconst isLastPage = lastPage === undefined;\n\t\t\tnext.disabled = isLastPage;\n\t\t}\n\n\t\tif (previous) {\n\t\t\tconst firstPage = pages[pageIndex - 1];\n\t\t\tconst isFirstPage = firstPage === undefined;\n\t\t\tprevious.disabled = isFirstPage;\n\t\t}\n\t}\n\n\t/**\n\t * Removes all buttons from the dom and detaches all event handler.\n\t * @internal\n\t */\n\tprivate _remove(): void {\n\t\tconst buttons = fromCache<Button[]>(this, CACHE_KEY_BUTTONS) as Button[];\n\n\t\tbuttons.forEach((button): void => {\n\t\t\t// The onClick listener is already bound in the constructor.\n\t\t\t//\n\t\t\t// eslint-disable-next-line @typescript-eslint/unbound-method\n\t\t\tbutton?.removeEventListener(EVENT_CLICK, this._onPrev);\n\t\t\t// The onClick listener is already bound in the constructor.\n\t\t\t//\n\t\t\t// eslint-disable-next-line @typescript-eslint/unbound-method\n\t\t\tbutton?.removeEventListener(EVENT_CLICK, this._onNext);\n\t\t\tbutton?.parentNode?.removeChild(button);\n\t\t});\n\t}\n\n\t/**\n\t * Event handler to navigate backwards (to the left).\n\t * @internal\n\t */\n\tprivate _onPrev(): void {\n\t\tconst proxy = fromCache<IProxy>(this, CACHE_KEY_PROXY) as IProxy;\n\t\tconst { pages, pageIndex } = proxy;\n\t\tconst index = pages[pageIndex - 1] || pages[0];\n\t\tproxy.index = index;\n\t}\n\n\t/**\n\t * Event handler to navigate forwards (to the right).\n\t * @internal\n\t */\n\tprivate _onNext(): void {\n\t\tconst proxy = fromCache<IProxy>(this, CACHE_KEY_PROXY) as IProxy;\n\t\tconst { pages, pageIndex } = proxy;\n\t\tconst index = pages[pageIndex + 1] || pages[pages.length - 1];\n\t\tproxy.index = index;\n\t}\n\n}\n","import { IFeature, IProxy, UpdateEvent, UpdateType } from '../../types';\nimport { clearCache, clearFullCache, fromCache, writeCache } from '../../utils/cache';\nimport { render } from '../../utils/render';\n\n\nconst FEATURE_NAME = 'buildin:pagination';\n\nconst CACHE_KEY_PROXY = 'prxy';\nconst CACHE_KEY_CONFIGURATION = 'conf';\nconst CACHE_KEY_PAGINATION = 'pags';\nconst CACHE_KEY_BUTTONS = 'btns';\n\n\n/**\n * The template function to render a HTML markup of a pagination.\n * @param context the template context containing the required data to render\n * @return the HTML markup\n */\nexport type Template = (params: Context) => string;\n\n\n/**\n * The template rendering context.\n */\nexport type Context = {\n\tcontrols: string;\n\tclassName: string;\n\tlabel: TextTemplate;\n\ttitle: TextTemplate;\n\tpages: number[][];\n};\n\n\n/**\n * A text template function to render a text node. This will be used for button\n * labels and text-attributes inside the pagination\n */\nexport type TextTemplate = (params: TextContext) => string;\n\n\n/**\n * The text template rendering context.\n */\nexport type TextContext = {\n\tindex: number;\n\tpage: number[];\n\tpages: number[][];\n};\n\n\n/**\n * The options for the pagination feature.\n */\nexport type Options = {\n\n\t/**\n\t * Render function for the pagination elemements.\n\t */\n\ttemplate?: Template;\n\n\t/**\n\t * The class name the pagination element.\n\t * @defaultValue `'pagination'`\n\t */\n\tclassName?: string;\n\n\t/**\n\t * Render function for each button label inside the pagination.\n\t */\n\tlabel?: TextTemplate;\n\n\t/**\n\t * Render function for each button title attribute inside the pagination.\n\t */\n\ttitle?: TextTemplate;\n\n};\n\n\n/**\n * The required configuration for pagination feature.\n * @internal\n */\ntype Configuration = Required<Options>;\n\n\nconst DEFAULTS: Configuration = {\n\ttemplate: ({ className, controls, pages, label, title }: Context) => `\n\t\t<ul class=\"${className}\">\n\t\t\t${pages.map((page, index) => {\n\t\t\t\tconst data = { index, page, pages };\n\t\t\t\tconst labelStr = label(data);\n\t\t\t\tconst titleStr = title(data);\n\t\t\t\treturn `<li>\n\t\t\t\t\t<button type=\"button\" aria-controls=\"${controls}\" aria-label=\"${titleStr}\" title=\"${titleStr}\">\n\t\t\t\t\t\t<span>${labelStr}</span>\n\t\t\t\t\t</button>\n\t\t\t\t</li>`;\n\t\t\t}).join('')}\n\t\t</ul>\n\t`,\n\n\tclassName: 'pagination',\n\tlabel: ({ index }) => `${index + 1}`,\n\ttitle: ({ index }) => `Go to ${index + 1}. page`,\n};\n\n\n/**\n * The feature to enable pagination controls.\n */\nexport class Pagination implements IFeature {\n\n\t/**\n\t * Creates an instance of this feature.\n\t * @param options are the options to configure this instance\n\t */\n\tconstructor(options: Options = {}) {\n\t\twriteCache(this, CACHE_KEY_CONFIGURATION, { ...DEFAULTS, ...options });\n\t\tthis._onClick = this._onClick.bind(this);\n\t}\n\n\t/**\n\t * Returns the name of this feature.\n\t */\n\tpublic get name(): typeof FEATURE_NAME {\n\t\treturn FEATURE_NAME;\n\t}\n\n\t/**\n\t * Initializes this feature. This function will be called by the carousel\n\t * instance and should not be called manually.\n\t * @internal\n\t * @param proxy the proxy instance between carousel and feature\n\t */\n\tpublic init(proxy: IProxy): void {\n\t\twriteCache(this, CACHE_KEY_PROXY, proxy);\n\t\tthis._add();\n\t}\n\n\t/**\n\t * Destroys this feature. This function will be called by the carousel instance\n\t * and should not be called manually.\n\t * @internal\n\t */\n\tpublic destroy(): void {\n\t\tthis._remove();\n\t\tclearFullCache(this);\n\t}\n\n\t/**\n\t * This triggers the feature to update its inner state. This function will be\n\t * called by the carousel instance and should not be called manually. The\n\t * carousel passes a event object that includes the update reason. This can be\n\t * used to selectively/partially update sections of the feature.\n\t * @internal\n\t * @param event event that triggered the update\n\t * @param event.type is the update reason (why this was triggered)\n\t */\n\tpublic update(event: UpdateEvent): void {\n\t\tswitch (event.type) {\n\t\t\tcase UpdateType.SCROLL:\n\t\t\t\tthis._update();\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tthis._remove();\n\t\t\t\tthis._add();\n\t\t\t\tbreak;\n\t\t}\n\t}\n\n\t/**\n\t * Renders and adds the pagination element. Attaches event handlers to all\n\t * button elements.\n\t * @internal\n\t */\n\tprivate _add(): void {\n\t\tconst proxy = fromCache<IProxy>(this, CACHE_KEY_PROXY) as IProxy;\n\t\tconst config = fromCache<Configuration>(this, CACHE_KEY_CONFIGURATION) as Configuration;\n\t\tconst { el, mask, pages } = proxy;\n\t\tconst target = mask ?? el;\n\n\t\tif (pages.length < 2) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst { template, className, label, title } = config;\n\t\tconst pagination = render(template, { label, title, pages, className, controls: el.id });\n\n\t\tif (!pagination) {\n\t\t\treturn;\n\t\t}\n\n\t\t// @TODO: Add template for buttons:\n\t\tconst buttons = Array.from(pagination.querySelectorAll<HTMLButtonElement>('button'))\n\t\t\t.map((button) => {\n\t\t\t\t// The onClick listener is already bound in the constructor.\n\t\t\t\t//\n\t\t\t\t// eslint-disable-next-line @typescript-eslint/unbound-method\n\t\t\t\tbutton.addEventListener('click', this._onClick, true);\n\t\t\t\treturn button;\n\t\t\t});\n\n\t\ttarget.parentNode?.appendChild(pagination);\n\t\twriteCache(this, CACHE_KEY_PAGINATION, pagination);\n\t\twriteCache(this, CACHE_KEY_BUTTONS, buttons);\n\n\t\tthis._update();\n\t}\n\n\t/**\n\t * Updates the states of all buttons inside the pagination.\n\t * @internal\n\t */\n\tprivate _update(): void {\n\t\tconst proxy = fromCache<IProxy>(this, CACHE_KEY_PROXY) as IProxy;\n\t\tconst buttons = fromCache<HTMLButtonElement[]>(this, CACHE_KEY_BUTTONS) as HTMLButtonElement[];\n\n\t\tconst { pageIndex } = proxy;\n\t\tbuttons.forEach((button, at) => button.disabled = (at === pageIndex));\n\t}\n\n\t/**\n\t * Removes the whole pagination element and removes all attached event handlers.\n\t * @internal\n\t */\n\tprivate _remove(): void {\n\t\tconst pagination = fromCache<HTMLElement>(this, CACHE_KEY_PAGINATION);\n\t\tconst buttons = fromCache<HTMLButtonElement[]>(this, CACHE_KEY_BUTTONS);\n\n\t\tbuttons?.forEach((button) => {\n\t\t\t// The onClick listener is already bound in the constructor.\n\t\t\t//\n\t\t\t// eslint-disable-next-line @typescript-eslint/unbound-method\n\t\t\tbutton.removeEventListener('click', this._onClick);\n\t\t\tbutton.parentNode?.removeChild(button);\n\t\t});\n\t\tpagination?.parentNode?.removeChild(pagination);\n\n\t\tclearCache(this, CACHE_KEY_BUTTONS);\n\t\tclearCache(this, CACHE_KEY_PAGINATION);\n\t}\n\n\t/**\n\t * Event handler when a button is clicked. Detects the current index of the\n\t * clicked button inside the pagination and updates the index accordingly of\n\t * the carousel.\n\t * @internal\n\t * @param event the mouse event\n\t */\n\tprivate _onClick(event: MouseEvent): void {\n\t\tconst proxy = fromCache<IProxy>(this, CACHE_KEY_PROXY) as IProxy;\n\t\tconst buttons = fromCache<HTMLButtonElement[]>(this, CACHE_KEY_BUTTONS) as HTMLButtonElement[];\n\t\tconst target = event.currentTarget as HTMLButtonElement;\n\t\tconst index = buttons.indexOf(target);\n\t\tproxy.index = proxy.pages[index];\n\t}\n\n}\n","import { Carousel } from '../src/carousel';\nimport { Buttons } from '../src/features/buttons';\nimport { Pagination } from '../src/features/pagination';\n\nvar element = document.querySelector('.caroucssel');\nvar items = Array.from(document.querySelectorAll('.item'));\n\nif (!element) {\n\tthrow new Error('Missing element for carousel.');\n}\n\nnew Carousel(element, {\n\tfeatures: [\n\t\tnew Buttons(),\n\t\tnew Pagination(),\n\t],\n\tonScroll: function(event) {\n\t\titems.forEach(function(item, index) {\n\t\t\titem.classList[event.index.includes(index) ? 'add' : 'remove']('is-active');\n\t\t});\n\t}\n});\n"]}